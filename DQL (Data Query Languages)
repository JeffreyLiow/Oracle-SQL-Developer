/* Addition */
select policy_rrp + policy_tp from table;
select policy_rrp,policy_tp,(policy_rrp+policy_tp) as TotalAccount from table
;

/* Top 10 policy_rrp */
select * from table where policy_rrp is not null order by policy_rrp desc fetch next 10 rows only
;

/* According custom order */
select cust_countrycode,count(*) from table group by cust_countrycode 
order by decode(cust_countrycode,'VN',1,'HK',2,'ID',3,'MY',4,'PH',5,'TW',6,'TH',7)
;

/* Limit one row */
select * from table A where rownum=1
union all 
select * from table B where rownum=1
;

/* Search imei result where salesrep_id not null */
select * from table A where imei in 
('1','2') and sales_rep_id is not null
union all
select * from table B where imei in 
('1','2') and sales_rep_id is not null
union all 
select * from table C where imei in 
('1','2') and sales_rep_id is not null
;

/* Search policynumber that have more than 1 */
select count(policynumber), policynumber from table group by policynumber having count(policynumber)>1
;

/* Search policynumber that not in another table */
select * from table A where policynumber not in (select policy_id from table B)
;

/* Join Table where clause */
select * from tableA A
left join tableB B on
A.store_code=B.store_code
where (a.created_date > to_date('20/12/2021','dd/mm/yyyy') and
a.created_date <= to_date('31/12/2021','dd/mm/yyyy')) and
a.store_code is not null and
a.policy_imei in ('1','2','3')
;

/* First time charge */
select servicecontractnumber,ordernumber,timestamp,orderstatus from table
where timestamp < to_date('01/02/2021','dd/mm/yyyy')
order by servicecontractnumber,timestamp
;

/* Calculate month of difference first charge till now vs the actual count */
select servicecontractnumber, min(timestamp), max(timestamp), (round(months_between(current_timestamp,min(timestamp)))+1) as diff_first_last_mth ,count(timestamp) from table
group by servicecontractnumber
;

/* Based on 4/1/22 till 4/2/22 (Last time charge) */
select servicecontractnumber,ordernumber,timestamp,orderstatus from table
where timestamp >= to_date('04/01/2022','dd/mm/yyyy') and
timestamp < to_date('04/02/2022','dd/mm/yyyy')
order by servicecontractnumber,timestamp
;

/* Insert all need to include select * from dual, Date need to add '' */
insert all
into count_stg_master_daily (CoDate,CoCountry,CoStg,CoMaster,Diff) values ('31/3/2022','HK',27541,27532,9)
into count_stg_master_daily (CoDate,CoCountry,CoStg,CoMaster,Diff) values ('31/3/2022','ID',1189082,1189103,-21)
into count_stg_master_daily (CoDate,CoCountry,CoStg,CoMaster,Diff) values ('31/3/2022','MY',177012,173640,3372)
into count_stg_master_daily (CoDate,CoCountry,CoStg,CoMaster,Diff) values ('31/3/2022','PH',2925058,2925060,-2)
into count_stg_master_daily (CoDate,CoCountry,CoStg,CoMaster,Diff) values ('31/3/2022','TW',18850,18844,6)
into count_stg_master_daily (CoDate,CoCountry,CoStg,CoMaster,Diff) values ('31/3/2022','TH',478598,249912,228686)
select * from dual
;

/* When unable to detect variable case when, add on select * from ( ) */
select * from 
(
select policy.policynumber,policy.policystatus,sub."status" as Subscription_status,
case 
    when policy.policystatus='Active' and sub."status"='active' then 'correct'
    when policy.policystatus='Withdrawn' and sub."status"='cancelled' then 'correct'
    when policy.policystatus='OnHold' and sub."status"='active' then 'correct'
    when policy.policystatus='Cancelled' and sub."status"='cancelled' then 'correct'
    when policy.policystatus='InActive' and sub."status"='inactive' then 'correct'
    else 'incorrect'
end as match_status
from dwh.stg_crmz_policy_at policy
left join dwh.STG_CW_EMR_Subscription_AT sub on policy.policynumber=sub."serviceContractId"
)
where match_status in ('incorrect')
;

/* Use exists as join for subquery */
select "orderId" from dwh.STG_CW_EMR_Subscription_AT a where exists (select * from dwh.stg_crmz_policy_at b where a."orderId"=b.ORDERID)
;

/* Convert timestamp to date */
SELECT CAST(SYSTIMESTAMP AS DATE) FROM dual
;

/* Extract Month and Year from Timestamp */
SELECT ORDERID,extract(month from CAST(TRANSACTIONDATETIME AS DATE)) as month,extract(year from CAST(TRANSACTIONDATETIME AS DATE)) as year,status,count(*) 
FROM dwh.stg_crmz_integration_at 
where status in ('CONFIRMED','SUCCESSFUL')
group by ORDERID,extract(month from CAST(TRANSACTIONDATETIME AS DATE)),extract(year from CAST(TRANSACTIONDATETIME AS DATE)),status
having count(*)>1
order by count(*) desc
;

/* NVL == COALESCE (IF NOT NULL 100 ELSE 200) */
SELECT
  NVL(100,200)
FROM
  dual;
-- ==
SELECT
  COALESCE (100, 200)
FROM
  dual
  ;
  
/* Offset example (limit 10 offset 5) */
SELECT UW_NAME, DISPATCH_STATE, DISPATCH_CITY, sum(QUOTATION_REPAIR_TOTAL_COST) from fact_crmz_claims_id
group by UW_NAME, DISPATCH_STATE, DISPATCH_CITY
having sum(QUOTATION_REPAIR_TOTAL_COST)>100000
order by sum(QUOTATION_REPAIR_TOTAL_COST) desc
offset 5 rows fetch next 10 rows only
;


/* Rename cannot apply at where but able apply at order by */
select ORDERID,policyenddate,sysdate,round(policyenddate-sysdate)+1 as diff from dwh.stg_crmz_policy_at where ORDERID not in 
(select "orderId" from dwh.STG_CW_EMR_Subscription_AT) 
order by diff desc;
vs
select ORDERID,policyenddate,sysdate,round(policyenddate-sysdate)+1 as diff from dwh.stg_crmz_policy_at where diff>30; (Error)

/* Trunc with interval 10/3/22 */
select trunc(sysdate, 'yyyy') - interval '4' year from dual; -- 01/01/2018
select trunc(sysdate, 'yyyy') - interval '2' month from dual; -- 01/11/2021
select trunc(sysdate, 'yyyy') - interval '1' day from dual; -- 31/12/2021
select trunc(sysdate, 'dd') from dual; -- 10/03/2022
select trunc(sysdate, 'mm') from dual; -- 01/03/2022
; 

/* Extract last year data */
select extract(year from add_months(sysdate,-12)) y2 from dual
; -- 2021

/* BETWEEN vs (X< and X>) */
select QUOTAPARTCOSTS,
case 
    when QUOTAPARTCOSTS between 4000 and 10000 then '4000-10000'
    when QUOTAPARTCOSTS>10000 and QUOTAPARTCOSTS<700000 then '10000-700000'
end as segment from dwh.stg_crmz_claims_all
;

/* Delete duplicates */
DELETE FROM STG_CRON_LIST
WHERE rowid not in
(SELECT MIN(rowid)
FROM STG_CRON_LIST
GROUP BY CRON, CRONMI, CRONHH, MYTIME,INSERT_DATE)
;

/* Union with desc with 4th column */
select extract(year from policy_sold_date) as year,country,product_code,count(product_code),policy_status from dwh.fact_crmz_policy_master_TW 
where POLICY_STATUS='Active' and POLICY_SOLD_DATE>='01-01-2020' and product_code is not null
group by country,policy_status,product_code,extract(year from policy_sold_date)
union
select extract(year from policy_sold_date) as year,country,product_code,count(product_code),policy_status from dwh.fact_crmz_policy_master_TH 
where POLICY_STATUS='Active' and POLICY_SOLD_DATE>='01-01-2020' and product_code is not null
group by country,policy_status,product_code,extract(year from policy_sold_date)
order by 4 desc
; -- fourth column order by desc

/* Check date format */
select distinct "endDate" from dwh.STG_CW_EMR_Subscription_AT order by "endDate";
select * from dwh.STG_CW_EMR_Subscription_AT where "endDate"='15-02-2022';
select * from dwh.STG_CW_EMR_Subscription_AT where "endDate"='15-02-2022' or "endDate"='2022-02-15'
;

/* Count length and extract */
select "endDate",length("endDate") from dwh.STG_CW_EMR_Subscription_AT order by length("endDate") desc;
select "endDate",length("endDate") from dwh.STG_CW_EMR_Subs_pay_AT order by length("endDate") desc;
select extract(month from to_date("endDate",'YYYY-MM-DD')) as month from dwh.STG_CW_EMR_Subscription_AT order by month desc;
select extract(month from to_date("endDate",'YYYY-MM-DD')) as month from DWH.stg_cw_emr_subs_pay_at order by month desc
;

/* Date difference */
select round(creationdate - policypurchasedate,0) from dwh.stg_crmz_policy_id
;

/* Find last month data (010322-310322) with sysdate | today (220422) */
select * from dwh.fact_crmz_policy_master_VN
where POLICY_STATUS='Active' and policy_sold_date between trunc(add_months(sysdate,-1),'mm') and last_day(add_months(sysdate,-1))
order by policy_sold_date
;

/* With (CTE) extract customer ID with many policies */
with duplicate_cust_id as (
select CUST_ID,count(*) from dwh.stg_crmz_policy_my
group by CUST_ID
having count(*)> 1)
select CUST_ID,POLICYNUMBER,PRODUCT_CODE from dwh.stg_crmz_policy_my
where CUST_ID in (select CUST_ID from duplicate_cust_id)
order by CUST_ID asc;
vs
select CUST_ID,POLICYNUMBER,PRODUCT_CODE from dwh.stg_crmz_policy_my
where CUST_ID in 
(select CUST_ID from 
(select CUST_ID,count(*) from dwh.stg_crmz_policy_my
group by CUST_ID
having count(*)> 1))
order by CUST_ID asc
;

/* If unable to detect date, force column date and sysdate to_date() */
select * from dwh.FACT_CRMZ_POLICY_MASTER_MY 
where client_name='DIGI' and UW_COST is NULL and 
to_date(created_date,'DD/MM/YYYY')=to_date(sysdate,'DD/MM/YYYY')
;

/* Row_number() over (partition by XX order by XX) */
select policy_id,partner_id,client_name,product_code,plan_code,deleted,deletedon,coverage from
(select policy_id,partner_id,client_name,product_code,plan_code,deleted,deletedon,coverage,country,
row_number() over (partition by policy_id,plan_code order by deleted) as row_num from cte_join)
where row_num=1 order by policy_id,deleted
;

/* '' || '' + NVL(e1,e2)==when e1 is not null then e1 else e2 + SUBSTR('CLUBORACLE',3,2) -> UB + INSTR('Tech on the net', 'e') -> 2 */
select brand_name,model_na,
(brand_name || ' ' || nvl(substr(model_name,0,instr(model_name,'(')-1),model_name)) as model_name_test from dwh.tbl_ref_tac 
where brand_name is not null and upper(brand_name)<> 'NOT KNOWN' and model_name2 is null and brand_name = 'Apple'
;
nvl(substr(model_name,0,instr(model_name,'(')-1),model_name))= Iphone 13 (1,2,3) -> Iphone 13
;


